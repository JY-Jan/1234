/**
 * Copyrigt (2020, ) Institute of Software, Chinese Academy of Sciences
 */
package com.cn.services;

import org.springframework.beans.factory.annotation.Autowired;
import com.cn.mappers.Pm_flowMapper;
import com.cn.models.Pm_flow;
import com.github.tools.annotations.api.FunctionDescriber;
import com.github.webfrk.core.HttpBodyHandler;
import com.github.tools.annotations.ServiceDefinition;
import javax.validation.constraints.*;
import com.github.tools.annotations.api.Required;

/**
 * This code is auto-generated by <code>ServiceGenerator<code>
 *
 */
@ServiceDefinition
public class Pm_flowService extends HttpBodyHandler {

	@Autowired
	private Pm_flowMapper pm_flowMapper;

	@FunctionDescriber(shortName = "创建流转规则", description = "暂无", prerequisite = "暂无")
	public void addPm_flow(@Required(false) @Size(min = 6, max = 20) String flow_rule, Integer project_id) {
		 pm_flowMapper.addPm_flow(flow_rule, project_id);
	}

	@FunctionDescriber(shortName = "查询流转内的所有字段", description = "暂无", prerequisite = "暂无")
	public java.util.List<com.cn.models.Pm_flow> queryPm_flow(Integer flow_id) {
		return pm_flowMapper.queryPm_flow(flow_id);
	}

	@FunctionDescriber(shortName = "查询所有流转规则名称", description = "暂无", prerequisite = "暂无")
	public java.util.List<java.lang.String> queryFlow_rule() {
		return pm_flowMapper.queryFlow_rule();
	}

	@FunctionDescriber(shortName = "根据flow_id删除流转规则", description = "暂无", prerequisite = "暂无")
	public void deletePm_flow(int flow_id) {
		 pm_flowMapper.deletePm_flow(flow_id);
	}

	@FunctionDescriber(shortName = "编辑流转规则", description = "暂无", prerequisite = "暂无")
	public void updateFlow_rule(@Required(false) @Size(min = 6, max = 20) String flow_rule, Integer lane_name1, Integer flow_condition, Integer lane_name2, Integer lane_state, Integer flow_id) {
		 pm_flowMapper.updateFlow_rule(flow_rule, lane_name1, flow_condition, lane_name2, lane_state, flow_id);
	}

}