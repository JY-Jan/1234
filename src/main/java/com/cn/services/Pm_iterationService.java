/**
 * Copyrigt (2020, ) Institute of Software, Chinese Academy of Sciences
 */
package com.cn.services;

import java.math.BigInteger;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;

import com.cn.mappers.Pm_iterationMapper;
import com.cn.models.Pm_iteration;
import com.github.tools.annotations.ServiceDefinition;
import com.github.tools.annotations.api.FunctionDescriber;
import com.github.webfrk.core.HttpBodyHandler;

/**
 * This code is auto-generated by <code>ServiceGenerator<code>
 *
 */
@ServiceDefinition
public class Pm_iterationService extends HttpBodyHandler {

	@Autowired
	private Pm_iterationMapper pm_iterationMapper;

	@FunctionDescriber(shortName = "根据项目id展示该项目的所有迭代", description = "暂无", prerequisite = "暂无")
	public java.util.List<com.cn.models.Pm_iteration> getPm_iteration(BigInteger project_id) {
		return pm_iterationMapper.getPm_iteration(project_id);
	}
	@FunctionDescriber(shortName = "根据缺陷id展示该项目的所有迭代", description = "暂无", prerequisite = "暂无")
	public java.util.List<com.cn.models.Pm_iteration> getPm_itBybug(BigInteger bug_id) {
		return pm_iterationMapper.getPm_itBybug(bug_id);
	}
	@FunctionDescriber(shortName = "根据缺陷id展示该项目的所有成员", description = "暂无", prerequisite = "暂无")
	public java.util.List<com.cn.models.Pm_user> getUserBybug_id(BigInteger bug_id) {
		return pm_iterationMapper.getUserBybug_id(bug_id);
	}
	@FunctionDescriber(shortName = "根据项目id展示该项目的所有成员", description = "暂无", prerequisite = "暂无")
	public java.util.List<com.cn.models.Pm_user> getUserByp_id(BigInteger project_id) {
		return pm_iterationMapper.getUserByp_id(project_id);
	}
	/*//sxw
	@FunctionDescriber(shortName = "展示（本项目）迭代信息", description = "暂无", prerequisite = "暂无")
	public java.util.List<com.cn.models.Pm_iteration> getPm_iteration() {
		return pm_iterationMapper.getPm_iteration();
	}*/

	
	//刘天琪，展示迭代
	@FunctionDescriber(shortName = "根据项目id展示该项目下的所有迭代", description = "暂无", prerequisite = "暂无")
	public java.util.List<com.cn.models.Pm_iteration> listPm_iteration1(BigInteger project_id) {
		return pm_iterationMapper.listPm_iteration1(project_id);
	}
	
	//卢湛兴（开始）--------------------
	@FunctionDescriber(shortName = "查询迭代计划详情", description = "暂无", prerequisite = "暂无")
	public com.cn.models.Pm_iteration queryIterationDetails(BigInteger iteration_id) {
		return pm_iterationMapper.queryIterationDetails(iteration_id);
	}

	@FunctionDescriber(shortName = "根据iteration_id删除迭代计划", description = "暂无", prerequisite = "暂无")
	public void deletePm_iteration(BigInteger iteration_id) {
		 pm_iterationMapper.deletePm_iteration(iteration_id);
	}

	@FunctionDescriber(shortName = "编辑迭代计划", description = "暂无", prerequisite = "暂无")
	public java.lang.Integer updatePm_iteration(@Valid String iteration_id,String iteration_name,String iteration_stime,String iteration_otime,String iteration_desc) {
		Pm_iteration pm_iteration = new Pm_iteration();
		pm_iteration.setIteration_id(Integer.parseInt(iteration_id));
		pm_iteration.setIteration_name(iteration_name);
		pm_iteration.setIteration_stime(iteration_stime);
		pm_iteration.setIteration_otime(iteration_otime);
		pm_iteration.setIteration_desc(iteration_desc);
		return pm_iterationMapper.updatePm_iteration(pm_iteration);
	}

	@FunctionDescriber(shortName = "查询该项目所有迭代计划", description = "暂无", prerequisite = "暂无")
	public java.util.List<com.cn.models.Pm_iteration> queryIteration(BigInteger project_id) {
		return pm_iterationMapper.queryIteration(project_id);
	}

	@FunctionDescriber(shortName = "添加迭代计划", description = "暂无", prerequisite = "暂无")
	public void addPm_iteration(@Valid Pm_iteration pm_iteration) {
		 pm_iterationMapper.addPm_iteration(pm_iteration);
	}
	//卢湛兴（结束）-------------------

}
